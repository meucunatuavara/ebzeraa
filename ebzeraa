-- Lista de chaves válidas
local validKeys = {
    "1A2B3C4D5E6F7G8", "2H9I0J1K2L3M4N5", "3P6Q7R8S9T0U1V2", "4W3X4Y5Z6A7B8C9", "5D0E1F2G3H4I5J6",
    "6K7L8M9N0O1P2Q3", "7R4S5T6U7V8W9X0", "8Y1Z2A3B4C5D6E7", "9F0G1H2I3J4K5L6", "10M7N8O9P0Q1R2",
    "11S3T4U5V6W7X8Y9", "12Z0A1B2C3D4E5F6", "13G7H8I9J0K1L2M3", "14N4O5P6Q7R8S9T0", "15U1V2W3X4Y5Z6",
    "16A7B8C9D0E1F2G3", "17H4I5J6K7L8M9N0", "18P1Q2R3S4T5U6V7", "19W8X9Y0Z1A2B3C4", "20D5E6F7G8H9I0J1",
    "21K2L3M4N5O6P7Q8", "22R9S0T1U2V3W4X5", "23Y6Z7A8B9C0D1E2", "24F3G4H5I6J7K8L9", "25M0N1O2P3Q4R5",
    "26S6T7U8V9W0X1Y2", "27Z3A4B5C6D7E8F9", "28G0H1I2J3K4L5M6", "29N7O8P9Q0R1S2T3", "30U4V5W6X7Y8Z9",
    "31A0B1C2D3E4F5G6", "32H7I8J9K0L1M2N3", "33P4Q5R6S7T8U9V0", "34W1X2Y3Z4A5B6C7", "35D8E9F0G1H2I3J4",
    "36K3L4M5N6O7P8Q9", "37R0S1T2U3V4W5X6", "38Y7Z8A9B0C1D2E3", "39F4G5H6I7J8K9L0", "40M1N2O3P4Q5R6",
    "41S7T8U9V0W1X2Y3", "42Z4A5B6C7D8E9F0", "43G1H2I3J4K5L6M7", "44N8O9P0Q1R2S3T4", "45U5V6W7X8Y9Z0A1",
    "46B2C3D4E5F6G7H8", "47I9J0K1L2M3N4O5", "48P6Q7R8S9T0U1V2", "49W3X4Y5Z6A7B8C9", "50D0E1F2G3H4I5J6",
    "51K7L8M9N0O1P2Q3", "52R4S5T6U7V8W9X0", "53Y1Z2A3B4C5D6E7", "54F3G4H5I6J7K8L9", "55M0N1O2P3Q4R5",
    "56S6T7U8V9W0X1Y2", "57Z3A4B5C6D7E8F9", "58G0H1I2J3K4L5M6", "59N7O8P9Q0R1S2T3", "60U4V5W6X7Y8Z9",
    "61A0B1C2D3E4F5G6", "62H7I8J9K0L1M2N3", "63P4Q5R6S7T8U9V0", "64W1X2Y3Z4A5B6C7", "65D8E9F0G1H2I3J4",
    "66K3L4M5N6O7P8Q9", "67R0S1T2U3V4W5X6", "68Y7Z8A9B0C1D2E3", "69F4G5H6I7J8K9L0", "70M1N2O3P4Q5R6",
    "71S7T8U9V0W1X2Y3", "72Z4A5B6C7D8E9F0", "73G1H2I3J4K5L6M7", "74N8O9P0Q1R2S3T4", "75U5V6W7X8Y9Z0A1",
    "76B2C3D4E5F6G7H8", "77I9J0K1L2M3N4O5", "78P6Q7R8S9T0U1V2", "79W3X4Y5Z6A7B8C9", "80D0E1F2G3H4I5J6",
    "81K7L8M9N0O1P2Q3", "82R4S5T6U7V8W9X0", "83Y1Z2A3B4C5D6E7", "84F3G4H5I6J7K8L9", "85M0N1O2P3Q4R5",
    "86S6T7U8V9W0X1Y2", "87Z3A4B5C6D7E8F9", "88G0H1I2J3K4L5M6", "89N7O8P9Q0R1S2T3", "90U4V5W6X7Y8Z9",
    "91A0B1C2D3E4F5G6", "92H7I8J9K0L1M2N3", "93P4Q5R6S7T8U9V0", "94W1X2Y3Z4A5B6C7", "95D8E9F0G1H2I3J4",
    "96K3L4M5N6O7P8Q9", "97R0S1T2U3V4W5X6", "98Y7Z8A9B0C1D2E3", "99F4G5H6I7J8K9L0", "100M1N2O3P4Q5R6"
}

-- Função para salvar e carregar dados do usuário
local DataStoreService = game:GetService("DataStoreService")
local keyStore = DataStoreService:GetDataStore("AimbotKeys")

local selectedTeam = nil
local aimKey = Enum.UserInputType.MouseButton2
local toggleGUIKey = Enum.KeyCode.Zero
local fovRadius = 50
local predictionFactor = 0.05
local guiVisible = false
local hasValidKey = false
local lastKeyDate = nil

local fovCircle = Drawing.new("Circle")
fovCircle.Visible = false
fovCircle.Color = Color3.new(1, 1, 0)
fovCircle.Thickness = 2
fovCircle.Filled = false
fovCircle.Radius = fovRadius
fovCircle.Position = Vector2.new(workspace.CurrentCamera.ViewportSize.X / 2, workspace.CurrentCamera.ViewportSize.Y / 2)

local screenGui = Instance.new("ScreenGui", game.CoreGui)
screenGui.Name = "AimbotConfig"
screenGui.Enabled = false

local frame = Instance.new("Frame", screenGui)
frame.AnchorPoint = Vector2.new(0.5, 0.5)
frame.Position = UDim2.new(0.5, 0, 0.5, 0)
frame.Size = UDim2.new(0, 300, 0, 250)
frame.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
frame.BackgroundTransparency = 0.1
frame.BorderSizePixel = 0
frame.Visible = false

local title = Instance.new("TextLabel", frame)
title.Text = "Aimbot Configurations"
title.Font = Enum.Font.SourceSansBold
title.TextSize = 20
title.TextColor3 = Color3.new(1, 1, 1)
title.Size = UDim2.new(1, -20, 0, 40)
title.Position = UDim2.new(0, 10, 0, 5)
title.BackgroundTransparency = 1

local keyInput = Instance.new("TextBox", frame)
keyInput.Font = Enum.Font.SourceSans
keyInput.TextSize = 18
keyInput.TextColor3 = Color3.new(1, 1, 1)
keyInput.Size = UDim2.new(1, -20, 0, 40)
keyInput.Position = UDim2.new(0, 10, 0, 60)
keyInput.BackgroundColor3 = Color3.new(0.3, 0.3, 0.3)
keyInput.PlaceholderText = "Enter your key"

local submitButton = Instance.new("TextButton", frame)
submitButton.Text = "Submit"
submitButton.Font = Enum.Font.SourceSans
submitButton.TextSize = 18
submitButton.TextColor3 = Color3.new(1, 1, 1)
submitButton.Size = UDim2.new(0.8, 0, 0, 40)
submitButton.Position = UDim2.new(0.1, 0, 0.6, 0)
submitButton.BackgroundColor3 = Color3.new(0.3, 0.3, 0.3)

local errorMessage = Instance.new("TextLabel", frame)
errorMessage.Text = ""
errorMessage.Font = Enum.Font.SourceSans
errorMessage.TextSize = 16
errorMessage.TextColor3 = Color3.new(1, 0, 0)
errorMessage.Size = UDim2.new(1, -20, 0, 40)
errorMessage.Position = UDim2.new(0, 10, 0, 110)
errorMessage.BackgroundTransparency = 1
errorMessage.Visible = false

-- Função para validar a chave
local function validateKey(key)
    for _, validKey in ipairs(validKeys) do
        if key == validKey then
            hasValidKey = true
            lastKeyDate = os.time()
            return true
        end
    end
    return false
end

-- Função de aimbot
local function aimbot()
    local closestPlayer = nil
    local closestDistance = math.huge
    local camera = workspace.CurrentCamera
    local mousePosition = game.Players.LocalPlayer:GetMouse().Hit.p

    for _, player in ipairs(game.Players:GetPlayers()) do
        if player.Character and player ~= game.Players.LocalPlayer and player.Character:FindFirstChild("Head") then
            local playerPos = player.Character.Head.Position
            local screenPos, onScreen = camera:WorldToScreenPoint(playerPos)

            if onScreen then
                local distance = (Vector2.new(screenPos.X, screenPos.Y) - Vector2.new(mousePosition.X, mousePosition.Y)).Magnitude
                if distance < closestDistance and distance < fovRadius then
                    closestDistance = distance
                    closestPlayer = player
                end
            end
        end
    end

    if closestPlayer then
        local targetPos = closestPlayer.Character.Head.Position
        local direction = (targetPos - camera
